/**
 * @file cr_make.hpp
 * @author David Schoosleitner (d.g.schoosi@gmail.com)
 * @brief Responsible for creating makefile at the project (header)
 * @version 0.1
 * @date 2022-10-19
 * 
 * @copyright Copyright (c) David Schoosleitner 2022
 * 
 */

#pragma once

/**********
 *  STD INCLUDES 
 */
#include <iostream>
#include <fstream>

/**********
 *  LOCAL INCLUDES
 */
#include "config.hpp"
#include "cr_dir.hpp"

/**
 * @brief Project namespace
 * 
 */
namespace makeproj
{

/**
 * @brief makefile creation tool
 * 
 * @param outpname Project's output file name passed from parse
 * @param ccflags CCflags passed from parse
 * @return const int Code = 0: Success | Code > 0: Error
 */
const bool cr_makefile(
    const std::string projname,
    const std::string projroot,
    const std::string outpname,
    const std::string ccflags,
    const incl_dat_t &dat
);

inline const bool cr_cmakelist(
    const std::string projroot,
    const incl_dat_t &dat
)
{
    if(!dat.cmake) return true;
    std::ofstream cmakelist(cr_tilde_replace(projroot + "/CMakeList.txt"));
    cmakelist << std::endl;
    cmakelist.close();
    if(cmakelist.bad())
    {
        return false;
    }

    //! in .vscode
    if(!cr_dir_exists(projroot + "/.vscode"))
    {
        if(!cr_dir_mkdir(projroot + "/.vscode"))
        {
            std::cerr << "Failed to create subdir" << (projroot + "/.vscode") << " !" << std::endl;
            return false;
        }
    }

    //! settings.json in .vscode
    std::ofstream set_fs(cr_tilde_replace(projroot + "/.vscode/settings.json"));
    set_fs << "{\n\t\"cmake.sourceDirectory\": \"${workspaceFolder}/" DIR_DEV "\",\n\t\"cmake.buildDirectory\": \"${workspaceFolder}/" DIR_BUILD "\"\n}" << std::endl;
    set_fs.close();
    if(set_fs.bad())
    {
        std::cerr << "Failed to create settings.json in " << projroot << "/.vscode !" << std::endl;
        return false;
    }
    return true;
}

};

/**********
 *  MAKEFILE DEFINES
 */

#define CR_MAKE_HEADCOMMENT1                        "\
####################################"               "\n\
# Project "

#define CR_MAKE_HEADCOMMENT2                        "\n\
#"                                                  "\n\
# Auto generated via makeproj ver " VERSIONSTR      "\n\
#  David Schoosleitner (c) 2022"                    "\n\
####################################"               "\n\n"

#define CR_MAKE_COMPILERCOMMENT                     "\
### COMPILER DEFINITIONS ###"                       "\n\n"

#define CR_MAKE_CCDEF                               "\
# Generated by C makeproj include"                      "\n\
CC := gcc"                                          "\n\n"

#define CR_MAKE_CXXDEF                              "\
# Generated by C++ makeproj include"                    "\n\
CXX := g++"                                         "\n\n"

#define CR_MAKE_WINDRESDEF                          "\
# Generated by WR makeproj include (Win32 Only!)"   "\n\
WR := windres"                                      "\n\n"

#define CR_MAKE_GDBDEF                              "\
# Generated by debug makeproj"                      "\n\
GDB := gdb"                                         "\n\n"

#define CR_MAKE_DIRCOMMENT                          "\
### DIRECTORY DEFINITIONS ###"                      "\n\n"

#define CR_MAKE_BUILDDIR                            "\
BUILD_DIR := " DIR_BUILD                            "\n\n"

#define CR_MAKE_DEBUGDIR                            "\
# Generated by debug makeproj include"              "\n\
DEBUG_DIR := " DIR_DEBUG                            "\n\n"

#define CR_MAKE_SRCDIR                              "\
SOURCE_DIR := " DIR_DEV                             "\n\n"

#define CR_MAKE_BUILDARGSCOMMENT                    "\
### BUILD ARG DEFINITIONS ###"                      "\n\n"

#define CR_MAKE_OUTPUT                              "\
OUTPUT_FILE := "

#define CR_MAKE_CCFLAGS                             "\
CCFLAGS := "

#define CR_MAKE_DOUBLE_N                            "\n\n"

#define CR_MAKE_SOURCEOBJCOMMENT                    "\
### SOURCE/OBJ DEFINITIONS ###"                     "\n\n"

#define CR_MAKE_SOURCEOBJ                           "\
# Source Files, You may edit these to include files! \n\
SOURCES := "                                        "\n\n\
# Check if sources not empty"                       "\n\
ifeq ($(SOURCES),)"                                 "\n\
$(error You forgot to include source files!)"       "\n\
endif"                                              "\n\n\
# Sources relocation into " DIR_DEV                 "\n\
SRC_DEV := $(SOURCES:%=$(SOURCE_DIR)/%)"            "\n\n\
# Objects relocation into " DIR_BUILD               "\n\
OBJS := $(SOURCES:%=$(BUILD_DIR)/%.o)"              "\n\n"

#define CR_MAKE_DEBUGOBJ                            "\
# Generated by debug makeproj include"              "\n\
# Debug Objects relocation into " DIR_DEBUG         "\n\
OBJ_DEBUG := $(SOURCES:%=$(DEBUG_DIR)/%.o)"         "\n\n"

#define CR_MAKE_SCRIPTCOMMENT                       "\
### SCRIPTS ###"                                    "\n\n"

#define CR_MAKE_MKBUILD                             "\
$(BUILD_DIR):"                                      "\n\
\tmkdir $(BUILD_DIR)"                               "\n\n"

#define CR_MAKE_MKDEBUGBUILD                        "\
# Generated by debug makeproj include"              "\n\
$(DEBUG_DIR): $(BUILD_DIR)"                         "\n\
\tmkdir $(DEBUG_DIR)"                               "\n\n"

#define CR_MAKE_MKDEFAULTC                          "\
default: $(BUILD_DIR) $(OBJS)"                      "\n\
\t$(CC) -o $(OUTPUT_FILE) $(OBJS) $(CCFLAGS) -DPRODUCTION_MODE=1\n\n"

#define CR_MAKE_MKDEFAULTCPP                        "\
default: $(BUILD_DIR) $(OBJS)"                      "\n\
\t$(CXX) -o $(OUTPUT_FILE) $(OBJS) $(CCFLAGS) -DPRODUCTION_MODE=1\n\n"

#define CR_MAKE_MKDEBUGC                            "\
# Generated by debug makeproj include"              "\n\
debug: $(DEBUG_DIR) $(OBJ_DEBUG)"                   "\n\
\t$(CC) -o $(OUTPUT_FILE)_gdb $(OBJ_DEBUG) $(CCFLAGS) -g\n\n"

#define CR_MAKE_MKDEBUGCPP                          "\
# Generated by debug makeproj include"              "\n\
debug: $(DEBUG_DIR) $(OBJ_DEBUG)"                   "\n\
\t$(CXX) -o $(OUTPUT_FILE)_gdb $(OBJ_DEBUG) $(CCFLAGS) -g\n\n"

#define CR_MAKE_OBJC                                "\
$(BUILD_DIR)/%.c.o: $(SOURCE_DIR)/%.c"              "\n\
\t$(CC) -o $@ -c $< $(CCFLAGS) -DPRODUCTION_MODE=1  \n\n"

#define CR_MAKE_OBJCPP                              "\
$(BUILD_DIR)/%.cpp.o: $(SOURCE_DIR)/%.cpp"          "\n\
\t$(CXX) -o $@ -c $< $(CCFLAGS) -DPRODUCTION_MODE=1 \n\n"

#define CR_MAKE_OBJDEBUGC                           "\
# Generated by debug makeproj include"              "\n\
$(DEBUG_DIR)/%.c.o: $(SOURCE_DIR)/%.c"              "\n\
\t$(CC) -o $@ -c $< $(CCFLAGS) -g"                  "\n\n"

#define CR_MAKE_OBJDEBUGCPP                         "\
# Generated by debug makeproj include"              "\n\
$(DEBUG_DIR)/%.cpp.o: $(SOURCE_DIR)/%.cpp"          "\n\
\t$(CXX) -o $@ -c $< $(CCFLAGS) -g"                 "\n\n"

#define CR_MAKE_OBJWR                               "\
# Generated by WR makeproj include"                 "\n\
$(BUILD_DIR)/%.rc.o: $(SOURCE_DIR)/%.rc"            "\n\
\t$(WR) -o $@ -c $< $(CCFLAGS) -DPRODUCTION_MODE=1  \n\n"

#define CR_MAKE_OBJDEBUGWR                          "\
# Generated by WR makeproj include"                 "\n\
$(DEBUG_DIR)/%.rc.o: $(SOURCE_DIR)/%.rc"            "\n\
\t$(WR) -o $@ -c $< $(CCFLAGS) -g"                  "\n\n"

#define CR_MAKE_MKCLEAN                             "\
clean: $(BUILD_DIR)"                                "\n\
\t-@rm -r -f $(BUILD_DIR)/*"                        "\n\
\t-@rm -r -f $(OUTPUT_FILE)"                        "\n\
\t-@rm -r -f $(OUTPUT_FILE)_gdb"                    "\n\
\t@echo \"Deleted $(BUILD_DIR) and $(OUTPUT_FILE)\"\n\n"

#define CR_MAKE_MKRUN                               "\
# Generated by run makeproj include"                "\n\
run: default"                                       "\n\
\t./$(OUTPUT_FILE) $(args)"                         "\n\n"

#define CR_MAKE_MKRUNDEBUG                          "\
# Generated by run and debug makeproj include"      "\n\
rundebug: debug"                                    "\n\
\t$(GDB) $(OUTPUT_FILE)_gdb"                        "\n\n"
